/// <reference types="node" />
import type { LogOptions } from './construct-payload';
import type { GroupingObject } from './metrics-log';
import type { IncomingMessage, ServerResponse } from 'node:http';
export interface ExtendedIncomingMessage extends IncomingMessage {
    body?: Record<string, unknown> | string;
    route?: {
        path: string;
    };
    protocol?: string;
    baseUrl?: string;
    hostname?: string;
    originalUrl?: string;
    _text?: string;
    _json?: string;
    _form_encoded?: string;
}
interface ExtendedResponse extends ServerResponse {
    _body?: string;
}
export interface Options extends LogOptions {
    baseLogUrl?: string;
    bufferLength?: number;
}
/**
 * This method will send supplied API requests to ReadMe Metrics.
 *
 * @see {@link https://readme.com/metrics}
 * @see {@link https://docs.readme.com/docs/sending-logs-to-readme-with-nodejs}
 * @param readmeApiKey The API key for your ReadMe project. This ensures your requests end up in
 *    your dashboard. You can read more about the API key in
 *    [our docs](https://docs.readme.com/reference/authentication).
 * @param req This is your incoming request object from your HTTP server and/or framework.
 * @param res This is your outgoing response object for your HTTP server and/or framework.
 * @param group A function that helps translate incoming request data to our metrics grouping data.
 * @param options Additional options. See the documentation for more details.
 */
export declare function log(readmeApiKey: string, req: ExtendedIncomingMessage, res: ExtendedResponse, group: GroupingObject, options?: Options): any;
export {};
