import type { Har } from 'har-format';
import type { Response } from 'node-fetch';
export interface GroupingObject {
    /**
     * API Key used to make the request. Note that this is different from the `readmeAPIKey`
     * described above and should be a value from your API that is unique to each of your users.
     */
    apiKey: string;
    /**
     * Email of the user that is making the call.
     */
    email?: string;
    /**
     * @deprecated use `apiKey` instead
     */
    id?: string;
    /**
     * This will be the user's display name in the API Metrics Dashboard, since it's much easier to
     * remember a name than an API key.
     */
    label?: string;
}
export interface OutgoingLogBody {
    _id?: string;
    _version: number;
    clientIPAddress: string;
    development: boolean;
    group: Omit<GroupingObject, 'apiKey' | 'id'> & {
        id: string;
    };
    request: Har;
}
export interface LogResponse {
    ids: string | string[];
    response?: Response;
}
export declare function setBackoff(expiresAt: Date | undefined): void;
export declare function metricsAPICall(readmeAPIKey: string, body: OutgoingLogBody[], fireAndForget?: boolean): Promise<LogResponse>;
