"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var crypto_1 = __importDefault(require("crypto"));
function verifyWebhook(body, signature, secret) {
    if (!signature)
        throw new Error('Missing Signature');
    // Inspired by stripe-node
    // https://github.com/stripe/stripe-node/blob/4e82ccafda2017654ac264c070e7ebfa0e662fcd/lib/Webhooks.js#L240-L258
    var expectedScheme = 'v0';
    /* eslint-disable no-param-reassign */
    var _a = signature.split(',').reduce(function (accum, item) {
        var kv = item.split('=');
        if (kv[0] === 't') {
            accum.time = Number(kv[1]);
        }
        if (kv[0] === expectedScheme) {
            accum.readmeSignature = kv[1];
        }
        return accum;
    }, {
        time: -1,
        readmeSignature: ''
    }), time = _a.time, readmeSignature = _a.readmeSignature;
    /* eslint-enable no-param-reassign */
    // Make sure timestamp is recent to prevent replay attacks
    var THIRTY_MIN = 30 * 60 * 1000;
    if (new Date().getTime() - new Date(+time).getTime() > THIRTY_MIN) {
        throw new Error('Expired Signature');
    }
    // Verify the signature is valid
    var unsigned = "".concat(time, ".").concat(JSON.stringify(body));
    var hmac = crypto_1["default"].createHmac('sha256', secret);
    var verifySignature = hmac.update(unsigned).digest('hex');
    if (verifySignature !== readmeSignature) {
        throw new Error('Invalid Signature');
    }
    return body;
}
exports["default"] = verifyWebhook;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyaWZ5LXdlYmhvb2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL3ZlcmlmeS13ZWJob29rLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsa0RBQTRCO0FBTTVCLFNBQXdCLGFBQWEsQ0FBQyxJQUFpQixFQUFFLFNBQWlCLEVBQUUsTUFBYztJQUN4RixJQUFJLENBQUMsU0FBUztRQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUVyRCwwQkFBMEI7SUFDMUIsZ0hBQWdIO0lBQ2hILElBQU0sY0FBYyxHQUFHLElBQUksQ0FBQztJQUM1QixzQ0FBc0M7SUFDaEMsSUFBQSxLQUE0QixTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FDM0QsVUFBQyxLQUFLLEVBQUUsSUFBSTtRQUNWLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFM0IsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFFO1lBQ2pCLEtBQUssQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzVCO1FBRUQsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssY0FBYyxFQUFFO1lBQzVCLEtBQUssQ0FBQyxlQUFlLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQy9CO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDLEVBQ0Q7UUFDRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQ1IsZUFBZSxFQUFFLEVBQUU7S0FDcEIsQ0FDRixFQWxCTyxJQUFJLFVBQUEsRUFBRSxlQUFlLHFCQWtCNUIsQ0FBQztJQUNGLHFDQUFxQztJQUVyQywwREFBMEQ7SUFDMUQsSUFBTSxVQUFVLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7SUFDbEMsSUFBSSxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxHQUFHLElBQUksSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFFLEdBQUcsVUFBVSxFQUFFO1FBQ2pFLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztLQUN0QztJQUVELGdDQUFnQztJQUNoQyxJQUFNLFFBQVEsR0FBRyxVQUFHLElBQUksY0FBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFFLENBQUM7SUFDbkQsSUFBTSxJQUFJLEdBQUcsbUJBQU0sQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2pELElBQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVELElBQUksZUFBZSxLQUFLLGVBQWUsRUFBRTtRQUN2QyxNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7S0FDdEM7SUFFRCxPQUFPLElBQUksQ0FBQztBQUNkLENBQUM7QUEzQ0QsbUNBMkNDIn0=